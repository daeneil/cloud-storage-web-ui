{"ast":null,"code":"var _jsxFileName = \"/workspace/cloud-storage-web-ui/src/components/CameraList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Grid, Skeleton } from 'antd'; // Example UI components\nimport { deleteFile, downloadFile, getCameraList, getPresignedUrl, getVideoList, listFiles, uploadFile } from '../utils/cloudStorage'; // Assuming imported functions\n// Assuming imported functions\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CameraList = ({\n  onCameraSelect\n}) => {\n  _s();\n  const [cameras, setCameras] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    async function fetchCameras() {\n      try {\n        const fetchedCameras = await cloudStorage.getCameraList();\n        setCameras(fetchedCameras);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchCameras();\n  }, []);\n  const handleCameraClick = camera => {\n    onCameraSelect(camera);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loading && /*#__PURE__*/_jsxDEV(Grid.Container, {\n      justify: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n        children: new Array(4).fill(null).map((_, index) => /*#__PURE__*/_jsxDEV(Grid.Col, {\n          span: 4,\n          children: /*#__PURE__*/_jsxDEV(Skeleton, {\n            avatar: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error fetching cameras: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this), !loading && !error && /*#__PURE__*/_jsxDEV(Grid.Container, {\n      children: cameras.map(camera => /*#__PURE__*/_jsxDEV(Grid.Item, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => handleCameraClick(camera),\n          style: {\n            cursor: 'pointer'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: camera.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Status: \", camera.status]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Location: \", camera.location]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Last Recording: \", camera.lastRecordingTime]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this)\n      }, camera.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(CameraList, \"PYV754Q9Wh4/Dv/q1CzjeYH80qQ=\");\n_c = CameraList;\nexport default CameraList;\nvar _c;\n$RefreshReg$(_c, \"CameraList\");","map":{"version":3,"names":["React","useState","useEffect","Grid","Skeleton","deleteFile","downloadFile","getCameraList","getPresignedUrl","getVideoList","listFiles","uploadFile","jsxDEV","_jsxDEV","CameraList","onCameraSelect","_s","cameras","setCameras","loading","setLoading","error","setError","fetchCameras","fetchedCameras","cloudStorage","handleCameraClick","camera","children","Container","justify","Row","Array","fill","map","_","index","Col","span","avatar","fileName","_jsxFileName","lineNumber","columnNumber","message","Item","onClick","style","cursor","name","status","location","lastRecordingTime","id","_c","$RefreshReg$"],"sources":["/workspace/cloud-storage-web-ui/src/components/CameraList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Grid, Skeleton } from 'antd'; // Example UI components\nimport { deleteFile, downloadFile, getCameraList, getPresignedUrl, getVideoList, listFiles, uploadFile } from '../utils/cloudStorage'; // Assuming imported functions\n // Assuming imported functions\n\nconst CameraList = ({ onCameraSelect }) => {\n  const [cameras, setCameras] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    async function fetchCameras() {\n      try {\n        const fetchedCameras = await cloudStorage.getCameraList();\n        setCameras(fetchedCameras);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchCameras();\n  }, []);\n\n  const handleCameraClick = (camera) => {\n    onCameraSelect(camera);\n  };\n\n  return (\n    <div>\n      {loading && (\n        <Grid.Container justify=\"center\">\n          <Grid.Row>\n            {/* Skeleton loading placeholder */}\n            {new Array(4).fill(null).map((_, index) => (\n              <Grid.Col key={index} span={4}>\n                <Skeleton avatar />\n              </Grid.Col>\n            ))}\n          </Grid.Row>\n        </Grid.Container>\n      )}\n      {error && <p>Error fetching cameras: {error.message}</p>}\n      {!loading && !error && (\n        <Grid.Container>\n          {cameras.map((camera) => (\n            <Grid.Item key={camera.id}>\n              <div onClick={() => handleCameraClick(camera)} style={{ cursor: 'pointer' }}>\n                <h3>{camera.name}</h3>\n                <p>Status: {camera.status}</p>\n                <p>Location: {camera.location}</p>\n                <p>Last Recording: {camera.lastRecordingTime}</p>\n              </div>\n            </Grid.Item>\n          ))}\n        </Grid.Container>\n      )}\n    </div>\n  );\n};\n\nexport default CameraList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}