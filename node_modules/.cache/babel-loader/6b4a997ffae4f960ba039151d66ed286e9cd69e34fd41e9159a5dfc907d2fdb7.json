{"ast":null,"code":"import AWS from 'aws-sdk';\nconst s3 = new AWS.S3({\n  accessKeyId: process.env.AWS_ACCESS_KEY_ID,\n  // Securely retrieve credentials\n  secretAccessKey: process.env.AWS_SECRET_ACCESS_KEY,\n  region: 'your-region'\n});\n\n// Upload a file to S3\nexport const uploadFile = async (file, filename, bucket = 'your-bucket-name') => {\n  try {\n    const params = {\n      Bucket: bucket,\n      Key: filename,\n      Body: file,\n      ContentType: file.type\n    };\n    await s3.upload(params).promise();\n    return true;\n  } catch (err) {\n    console.error('Upload error:', err);\n    return false;\n  }\n};\n\n// Download a file from S3\nexport const downloadFile = async (filename, bucket = 'your-bucket-name') => {\n  try {\n    const params = {\n      Bucket: bucket,\n      Key: filename\n    };\n    const data = await s3.getObject(params).promise();\n    return data.Body;\n  } catch (err) {\n    console.error('Download error:', err);\n    throw err; // Re-throw for error handling in calling component\n  }\n};\n\n// List files in a bucket or folder\nexport const listFiles = async (prefix = '', bucket = 'your-bucket-name') => {\n  try {\n    const params = {\n      Bucket: bucket,\n      Prefix: prefix\n    };\n    const data = await s3.listObjectsV2(params).promise();\n    return data.Contents.map(item => ({\n      key: item.Key,\n      size: item.Size,\n      lastModified: item.LastModified\n    }));\n  } catch (err) {\n    console.error('List files error:', err);\n    return [];\n  }\n};\n\n// Delete a file from S3\nexport const deleteFile = async (filename, bucket = 'your-bucket-name') => {\n  try {\n    const params = {\n      Bucket: bucket,\n      Key: filename\n    };\n    await s3.deleteObject(params).promise();\n    return true;\n  } catch (err) {\n    console.error('Delete error:', err);\n    return false;\n  }\n};\n\n// Generate a presigned URL for a file (if applicable)\nexport const getPresignedUrl = async (filename, bucket = 'your-bucket-name') => {\n  try {\n    const params = {\n      Bucket: bucket,\n      Key: filename,\n      Expires: 60 * 60 // Set expiration time in seconds\n    };\n    const url = await s3.getSignedUrl('getObject', params);\n    return url;\n  } catch (err) {\n    console.error('Get presigned URL error:', err);\n    return null;\n  }\n};\n// ... other imports and code in cloudStorage.js ...\n\n// Get a list of cameras\nexport const getCameraList = async (bucket = 'your-bucket-name', folder = 'cameras') => {\n  try {\n    const cameras = await listFiles(folder, bucket);\n    return cameras.map(item => ({\n      name: item.key.replace(folder + '/', '') // Extract camera name from key\n      // ... other camera details if needed ...\n    }));\n  } catch (err) {\n    console.error('Failed to get camera list:', err);\n    return [];\n  }\n};\n\n// Get a list of videos\nexport const getVideoList = async (bucket = 'your-bucket-name', folder = 'videos') => {\n  try {\n    const videos = await listFiles(folder, bucket);\n    return videos.map(item => ({\n      name: item.key.replace(folder + '/', ''),\n      // Extract video name from key\n      size: item.size,\n      lastModified: item.lastModified\n      // ... other video details if needed ...\n    }));\n  } catch (err) {\n    console.error('Failed to get video list:', err);\n    return [];\n  }\n};","map":{"version":3,"names":["AWS","s3","S3","accessKeyId","process","env","AWS_ACCESS_KEY_ID","secretAccessKey","AWS_SECRET_ACCESS_KEY","region","uploadFile","file","filename","bucket","params","Bucket","Key","Body","ContentType","type","upload","promise","err","console","error","downloadFile","data","getObject","listFiles","prefix","Prefix","listObjectsV2","Contents","map","item","key","size","Size","lastModified","LastModified","deleteFile","deleteObject","getPresignedUrl","Expires","url","getSignedUrl","getCameraList","folder","cameras","name","replace","getVideoList","videos"],"sources":["/workspace/cloud-storage-web-ui/src/utils/cloudStorage.js"],"sourcesContent":["import AWS from 'aws-sdk';\n\nconst s3 = new AWS.S3({\n  accessKeyId: process.env.AWS_ACCESS_KEY_ID, // Securely retrieve credentials\n  secretAccessKey: process.env.AWS_SECRET_ACCESS_KEY,\n  region: 'your-region',\n});\n\n// Upload a file to S3\nexport const uploadFile = async (file, filename, bucket = 'your-bucket-name') => {\n  try {\n    const params = {\n      Bucket: bucket,\n      Key: filename,\n      Body: file,\n      ContentType: file.type,\n    };\n    await s3.upload(params).promise();\n    return true;\n  } catch (err) {\n    console.error('Upload error:', err);\n    return false;\n  }\n};\n\n// Download a file from S3\nexport const downloadFile = async (filename, bucket = 'your-bucket-name') => {\n  try {\n    const params = {\n      Bucket: bucket,\n      Key: filename,\n    };\n    const data = await s3.getObject(params).promise();\n    return data.Body;\n  } catch (err) {\n    console.error('Download error:', err);\n    throw err; // Re-throw for error handling in calling component\n  }\n};\n\n// List files in a bucket or folder\nexport const listFiles = async (prefix = '', bucket = 'your-bucket-name') => {\n  try {\n    const params = {\n      Bucket: bucket,\n      Prefix: prefix,\n    };\n    const data = await s3.listObjectsV2(params).promise();\n    return data.Contents.map((item) => ({\n      key: item.Key,\n      size: item.Size,\n      lastModified: item.LastModified,\n    }));\n  } catch (err) {\n    console.error('List files error:', err);\n    return [];\n  }\n};\n\n// Delete a file from S3\nexport const deleteFile = async (filename, bucket = 'your-bucket-name') => {\n  try {\n    const params = {\n      Bucket: bucket,\n      Key: filename,\n    };\n    await s3.deleteObject(params).promise();\n    return true;\n  } catch (err) {\n    console.error('Delete error:', err);\n    return false;\n  }\n};\n\n// Generate a presigned URL for a file (if applicable)\nexport const getPresignedUrl = async (filename, bucket = 'your-bucket-name') => {\n  try {\n    const params = {\n      Bucket: bucket,\n      Key: filename,\n      Expires: 60 * 60, // Set expiration time in seconds\n    };\n    const url = await s3.getSignedUrl('getObject', params);\n    return url;\n  } catch (err) {\n    console.error('Get presigned URL error:', err);\n    return null;\n  }\n};\n// ... other imports and code in cloudStorage.js ...\n\n// Get a list of cameras\nexport const getCameraList = async (bucket = 'your-bucket-name', folder = 'cameras') => {\n  try {\n    const cameras = await listFiles(folder, bucket);\n    return cameras.map((item) => ({\n      name: item.key.replace(folder + '/', ''), // Extract camera name from key\n      // ... other camera details if needed ...\n    }));\n  } catch (err) {\n    console.error('Failed to get camera list:', err);\n    return [];\n  }\n};\n\n// Get a list of videos\nexport const getVideoList = async (bucket = 'your-bucket-name', folder = 'videos') => {\n  try {\n    const videos = await listFiles(folder, bucket);\n    return videos.map((item) => ({\n      name: item.key.replace(folder + '/', ''), // Extract video name from key\n      size: item.size,\n      lastModified: item.lastModified,\n      // ... other video details if needed ...\n    }));\n  } catch (err) {\n    console.error('Failed to get video list:', err);\n    return [];\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}