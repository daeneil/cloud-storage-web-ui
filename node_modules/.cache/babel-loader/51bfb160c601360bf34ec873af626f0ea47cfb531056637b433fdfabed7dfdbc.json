{"ast":null,"code":"import React,{useState,useEffect}from'react';import ReactPlayer from'react-player';import{deleteFile,downloadFile,getCameraList,getPresignedUrl,getVideoList,listFiles,uploadFile}from'../utils/cloudStorage';// Assuming imported functions\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const CCTVVideoPlayer=_ref=>{let{videoId,metadata,onControl}=_ref;const[player,setPlayer]=useState(null);const[playbackState,setPlaybackState]=useState({playing:false,currentTime:0,volume:0.5});useEffect(()=>{// Fetch video source and metadata\nasync function fetchData(){try{const videoSource=await cloudStorage.getVideoSource(videoId);setPlayer({url:videoSource.url,playing:false,config:{file:videoSource.file,// For cloud storage downloads\nplaying:false,width:'100%',controls:true,// Enable built-in controls\nplayIcon:'▶',pauseIcon:'⏸',volumePanel:{inline:false},// Custom volume control\nlight:false// Disable default UI elements\n}});}catch(error){console.error('Error fetching video data:',error);// Handle error gracefully, e.g., display error message\n}}fetchData();},[videoId]);const handleControl=action=>{switch(action){case'play':setPlaybackState({...playbackState,playing:true});player.play();break;case'pause':setPlaybackState({...playbackState,playing:false});player.pause();break;// ... handle other controls\n}onControl(action);// Pass control events to parent if needed\n};// ... error handling and custom controls implementation ...\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(ReactPlayer,{...player,onPlay:()=>handleControl('play'),onPause:()=>handleControl('pause'),onEnded:()=>handleControl('ended'),onProgress:state=>setPlaybackState({...playbackState,currentTime:state.playedSeconds}),onVolumeChange:volume=>setPlaybackState({...playbackState,volume})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Timestamp: \",metadata.timestamp]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Camera Name: \",metadata.cameraName]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Camera Location: \",metadata.cameraLocation]})]})]});};export default CCTVVideoPlayer;","map":{"version":3,"names":["React","useState","useEffect","ReactPlayer","deleteFile","downloadFile","getCameraList","getPresignedUrl","getVideoList","listFiles","uploadFile","jsx","_jsx","jsxs","_jsxs","CCTVVideoPlayer","_ref","videoId","metadata","onControl","player","setPlayer","playbackState","setPlaybackState","playing","currentTime","volume","fetchData","videoSource","cloudStorage","getVideoSource","url","config","file","width","controls","playIcon","pauseIcon","volumePanel","inline","light","error","console","handleControl","action","play","pause","children","onPlay","onPause","onEnded","onProgress","state","playedSeconds","onVolumeChange","timestamp","cameraName","cameraLocation"],"sources":["/workspace/cloud-storage-web-ui/src/components/CCTVVideoPlayer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactPlayer from 'react-player';\nimport {deleteFile, downloadFile, getCameraList, getPresignedUrl, getVideoList, listFiles, uploadFile} from '../utils/cloudStorage'; // Assuming imported functions\n\nconst CCTVVideoPlayer = ({ videoId, metadata, onControl }) => {\n  const [player, setPlayer] = useState(null);\n  const [playbackState, setPlaybackState] = useState({\n    playing: false,\n    currentTime: 0,\n    volume: 0.5,\n  });\n\n  useEffect(() => {\n    // Fetch video source and metadata\n    async function fetchData() {\n      try {\n        const videoSource = await cloudStorage.getVideoSource(videoId);\n        setPlayer({\n          url: videoSource.url,\n          playing: false,\n          config: {\n            file: videoSource.file, // For cloud storage downloads\n            playing: false,\n            width: '100%',\n            controls: true, // Enable built-in controls\n            playIcon: '▶',\n            pauseIcon: '⏸',\n            volumePanel: { inline: false }, // Custom volume control\n            light: false, // Disable default UI elements\n          },\n        });\n      } catch (error) {\n        console.error('Error fetching video data:', error);\n        // Handle error gracefully, e.g., display error message\n      }\n    }\n    fetchData();\n  }, [videoId]);\n\n  const handleControl = (action) => {\n    switch (action) {\n      case 'play':\n        setPlaybackState({ ...playbackState, playing: true });\n        player.play();\n        break;\n      case 'pause':\n        setPlaybackState({ ...playbackState, playing: false });\n        player.pause();\n        break;\n      // ... handle other controls\n    }\n    onControl(action); // Pass control events to parent if needed\n  };\n\n  // ... error handling and custom controls implementation ...\n\n  return (\n    <div>\n      <ReactPlayer\n        {...player}\n        onPlay={() => handleControl('play')}\n        onPause={() => handleControl('pause')}\n        onEnded={() => handleControl('ended')}\n        onProgress={(state) => setPlaybackState({ ...playbackState, currentTime: state.playedSeconds })}\n        onVolumeChange={(volume) => setPlaybackState({ ...playbackState, volume })}\n      />\n      <div>\n        <p>Timestamp: {metadata.timestamp}</p>\n        <p>Camera Name: {metadata.cameraName}</p>\n        <p>Camera Location: {metadata.cameraLocation}</p>\n      </div>\n      {/* Additional controls or metadata display as needed */}\n    </div>\n  );\n};\n\nexport default CCTVVideoPlayer;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,WAAW,KAAM,cAAc,CACtC,OAAQC,UAAU,CAAEC,YAAY,CAAEC,aAAa,CAAEC,eAAe,CAAEC,YAAY,CAAEC,SAAS,CAAEC,UAAU,KAAO,uBAAuB,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAErI,KAAM,CAAAC,eAAe,CAAGC,IAAA,EAAsC,IAArC,CAAEC,OAAO,CAAEC,QAAQ,CAAEC,SAAU,CAAC,CAAAH,IAAA,CACvD,KAAM,CAACI,MAAM,CAAEC,SAAS,CAAC,CAAGpB,QAAQ,CAAC,IAAI,CAAC,CAC1C,KAAM,CAACqB,aAAa,CAAEC,gBAAgB,CAAC,CAAGtB,QAAQ,CAAC,CACjDuB,OAAO,CAAE,KAAK,CACdC,WAAW,CAAE,CAAC,CACdC,MAAM,CAAE,GACV,CAAC,CAAC,CAEFxB,SAAS,CAAC,IAAM,CACd;AACA,cAAe,CAAAyB,SAASA,CAAA,CAAG,CACzB,GAAI,CACF,KAAM,CAAAC,WAAW,CAAG,KAAM,CAAAC,YAAY,CAACC,cAAc,CAACb,OAAO,CAAC,CAC9DI,SAAS,CAAC,CACRU,GAAG,CAAEH,WAAW,CAACG,GAAG,CACpBP,OAAO,CAAE,KAAK,CACdQ,MAAM,CAAE,CACNC,IAAI,CAAEL,WAAW,CAACK,IAAI,CAAE;AACxBT,OAAO,CAAE,KAAK,CACdU,KAAK,CAAE,MAAM,CACbC,QAAQ,CAAE,IAAI,CAAE;AAChBC,QAAQ,CAAE,GAAG,CACbC,SAAS,CAAE,GAAG,CACdC,WAAW,CAAE,CAAEC,MAAM,CAAE,KAAM,CAAC,CAAE;AAChCC,KAAK,CAAE,KAAO;AAChB,CACF,CAAC,CAAC,CACJ,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,CAAEA,KAAK,CAAC,CAClD;AACF,CACF,CACAd,SAAS,CAAC,CAAC,CACb,CAAC,CAAE,CAACV,OAAO,CAAC,CAAC,CAEb,KAAM,CAAA0B,aAAa,CAAIC,MAAM,EAAK,CAChC,OAAQA,MAAM,EACZ,IAAK,MAAM,CACTrB,gBAAgB,CAAC,CAAE,GAAGD,aAAa,CAAEE,OAAO,CAAE,IAAK,CAAC,CAAC,CACrDJ,MAAM,CAACyB,IAAI,CAAC,CAAC,CACb,MACF,IAAK,OAAO,CACVtB,gBAAgB,CAAC,CAAE,GAAGD,aAAa,CAAEE,OAAO,CAAE,KAAM,CAAC,CAAC,CACtDJ,MAAM,CAAC0B,KAAK,CAAC,CAAC,CACd,MACF;AACF,CACA3B,SAAS,CAACyB,MAAM,CAAC,CAAE;AACrB,CAAC,CAED;AAEA,mBACE9B,KAAA,QAAAiC,QAAA,eACEnC,IAAA,CAACT,WAAW,KACNiB,MAAM,CACV4B,MAAM,CAAEA,CAAA,GAAML,aAAa,CAAC,MAAM,CAAE,CACpCM,OAAO,CAAEA,CAAA,GAAMN,aAAa,CAAC,OAAO,CAAE,CACtCO,OAAO,CAAEA,CAAA,GAAMP,aAAa,CAAC,OAAO,CAAE,CACtCQ,UAAU,CAAGC,KAAK,EAAK7B,gBAAgB,CAAC,CAAE,GAAGD,aAAa,CAAEG,WAAW,CAAE2B,KAAK,CAACC,aAAc,CAAC,CAAE,CAChGC,cAAc,CAAG5B,MAAM,EAAKH,gBAAgB,CAAC,CAAE,GAAGD,aAAa,CAAEI,MAAO,CAAC,CAAE,CAC5E,CAAC,cACFZ,KAAA,QAAAiC,QAAA,eACEjC,KAAA,MAAAiC,QAAA,EAAG,aAAW,CAAC7B,QAAQ,CAACqC,SAAS,EAAI,CAAC,cACtCzC,KAAA,MAAAiC,QAAA,EAAG,eAAa,CAAC7B,QAAQ,CAACsC,UAAU,EAAI,CAAC,cACzC1C,KAAA,MAAAiC,QAAA,EAAG,mBAAiB,CAAC7B,QAAQ,CAACuC,cAAc,EAAI,CAAC,EAC9C,CAAC,EAEH,CAAC,CAEV,CAAC,CAED,cAAe,CAAA1C,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}