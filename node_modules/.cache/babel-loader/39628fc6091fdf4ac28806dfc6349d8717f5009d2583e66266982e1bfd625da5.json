{"ast":null,"code":"var _jsxFileName = \"/workspace/cloud-storage-web-ui/src/components/VideoControls.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport ReactPlayer from 'react-player';\nimport { Button, Slider, Progress, message } from 'antd'; // Example UI components\nimport { createClip } from './clipApi'; // Assuming a clip creation API\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoControls = ({\n  videoRef\n}) => {\n  _s();\n  const [playing, setPlaying] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [playbackRate, setPlaybackRate] = useState(1);\n\n  // For frame-by-frame navigation\n  const [currentFrame, setCurrentFrame] = useState(0);\n  useEffect(() => {\n    const player = videoRef.current;\n    if (player) {\n      // ... existing event listeners\n\n      // Get initial frame count\n      player.getDuration().then(duration => {\n        setCurrentFrame(Math.floor(duration * 30)); // Assuming 30 FPS\n      });\n    }\n  }, [videoRef]);\n  const handlePlayPause = () => {\n    playing ? videoRef.current.pause() : videoRef.current.play();\n  };\n  const handleSeek = newValue => {\n    videoRef.current.seekTo(newValue);\n  };\n  const handleVolumeChange = newValue => {\n    videoRef.current.setVolume(newValue);\n  };\n  const handleSpeedChange = newValue => {\n    setPlaybackRate(newValue);\n    videoRef.current.setPlaybackRate(newValue); // Adjust playback speed\n  };\n  const handleFrameNavigation = direction => {\n    const step = direction === 'forward' ? 1 : -1;\n    const newFrame = Math.max(0, Math.min(currentFrame + step, duration * 30)); // Ensure within bounds\n    const newTime = newFrame / 30; // Convert frame to seconds\n    videoRef.current.seekTo(newTime, 'seconds');\n    setCurrentFrame(newFrame);\n  };\n  const handleClipCreation = async () => {\n    const {\n      startTime,\n      endTime\n    } = player.getCurrentTime(); // Get clip start/end times\n    const clipData = await createClip(videoRef.current.currentSrc, startTime, endTime); // Call API\n\n    if (clipData) {\n      // Handle successful clip creation\n      message.success('Clip created successfully!');\n      // ... further actions, e.g., download or preview\n    } else {\n      // Handle error\n      message.error('Failed to create clip.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-controls\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: handlePlayPause,\n      children: playing ? 'Pause' : 'Play'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Progress, {\n      type: \"slider\",\n      value: currentTime / duration || 0,\n      onAfterChange: handleSeek\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Slider, {\n      min: 0,\n      max: 1,\n      value: videoRef.current.volume,\n      onChange: handleVolumeChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button.Group, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => handleFrameNavigation('backward'),\n        children: \"Rewind\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSpeedChange,\n        children: playbackRate === 1 ? '1x' : playbackRate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => handleFrameNavigation('forward'),\n        children: \"Forward\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleClipCreation,\n      children: \"Create Clip\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoControls, \"tZ0H/Wc6nb0f9AU4RzjZn8tyssA=\");\n_c = VideoControls;\nexport default VideoControls;\nvar _c;\n$RefreshReg$(_c, \"VideoControls\");","map":{"version":3,"names":["React","useState","useEffect","useRef","ReactPlayer","Button","Slider","Progress","message","createClip","jsxDEV","_jsxDEV","VideoControls","videoRef","_s","playing","setPlaying","currentTime","setCurrentTime","duration","setDuration","playbackRate","setPlaybackRate","currentFrame","setCurrentFrame","player","current","getDuration","then","Math","floor","handlePlayPause","pause","play","handleSeek","newValue","seekTo","handleVolumeChange","setVolume","handleSpeedChange","handleFrameNavigation","direction","step","newFrame","max","min","newTime","handleClipCreation","startTime","endTime","getCurrentTime","clipData","currentSrc","success","error","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onAfterChange","volume","onChange","Group","_c","$RefreshReg$"],"sources":["/workspace/cloud-storage-web-ui/src/components/VideoControls.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport ReactPlayer from 'react-player';\nimport { Button, Slider, Progress, message } from 'antd'; // Example UI components\nimport { createClip } from './clipApi'; // Assuming a clip creation API\n\nconst VideoControls = ({ videoRef }) => {\n  const [playing, setPlaying] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [playbackRate, setPlaybackRate] = useState(1);\n\n  // For frame-by-frame navigation\n  const [currentFrame, setCurrentFrame] = useState(0);\n\n  useEffect(() => {\n    const player = videoRef.current;\n    if (player) {\n      // ... existing event listeners\n\n      // Get initial frame count\n      player.getDuration().then((duration) => {\n        setCurrentFrame(Math.floor(duration * 30)); // Assuming 30 FPS\n      });\n    }\n  }, [videoRef]);\n\n  const handlePlayPause = () => {\n    playing ? videoRef.current.pause() : videoRef.current.play();\n  };\n\n  const handleSeek = (newValue) => {\n    videoRef.current.seekTo(newValue);\n  };\n\n  const handleVolumeChange = (newValue) => {\n    videoRef.current.setVolume(newValue);\n  };\n\n  const handleSpeedChange = (newValue) => {\n    setPlaybackRate(newValue);\n    videoRef.current.setPlaybackRate(newValue); // Adjust playback speed\n  };\n\n  const handleFrameNavigation = (direction) => {\n    const step = direction === 'forward' ? 1 : -1;\n    const newFrame = Math.max(0, Math.min(currentFrame + step, duration * 30)); // Ensure within bounds\n    const newTime = newFrame / 30; // Convert frame to seconds\n    videoRef.current.seekTo(newTime, 'seconds');\n    setCurrentFrame(newFrame);\n  };\n\n  const handleClipCreation = async () => {\n    const { startTime, endTime } = player.getCurrentTime(); // Get clip start/end times\n    const clipData = await createClip(videoRef.current.currentSrc, startTime, endTime); // Call API\n\n    if (clipData) {\n      // Handle successful clip creation\n      message.success('Clip created successfully!');\n      // ... further actions, e.g., download or preview\n    } else {\n      // Handle error\n      message.error('Failed to create clip.');\n    }\n  };\n\n  return (\n    <div className=\"video-controls\">\n      <Button onClick={handlePlayPause}>\n        {playing ? 'Pause' : 'Play'}\n      </Button>\n      <Progress\n        type=\"slider\"\n        value={currentTime / duration || 0}\n        onAfterChange={handleSeek}\n      />\n      <Slider min={0} max={1} value={videoRef.current.volume} onChange={handleVolumeChange} />\n      <Button.Group>\n        <Button onClick={() => handleFrameNavigation('backward')}>\n          Rewind\n        </Button>\n        <Button onClick={handleSpeedChange}>\n          {playbackRate === 1 ? '1x' : playbackRate}\n        </Button>\n        <Button onClick={() => handleFrameNavigation('forward')}>\n          Forward\n        </Button>\n      </Button.Group>\n      <Button onClick={handleClipCreation}>Create Clip</Button>\n    </div>\n  );\n};\n\nexport default VideoControls;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}