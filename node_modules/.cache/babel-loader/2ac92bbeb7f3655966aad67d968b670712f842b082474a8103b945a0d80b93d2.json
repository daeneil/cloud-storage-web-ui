{"ast":null,"code":"import AWS from'aws-sdk';const s3=new AWS.S3({accessKeyId:process.env.AWS_ACCESS_KEY_ID,// Securely retrieve credentials\nsecretAccessKey:process.env.AWS_SECRET_ACCESS_KEY,region:'your-region'});// Upload a file to S3\nexport const uploadFile=async function(file,filename){let bucket=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'your-bucket-name';try{const params={Bucket:bucket,Key:filename,Body:file,ContentType:file.type};await s3.upload(params).promise();return true;}catch(err){console.error('Upload error:',err);return false;}};// Download a file from S3\nexport const downloadFile=async function(filename){let bucket=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'your-bucket-name';try{const params={Bucket:bucket,Key:filename};const data=await s3.getObject(params).promise();return data.Body;}catch(err){console.error('Download error:',err);throw err;// Re-throw for error handling in calling component\n}};// List files in a bucket or folder\nexport const listFiles=async function(){let prefix=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';let bucket=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'your-bucket-name';try{const params={Bucket:bucket,Prefix:prefix};const data=await s3.listObjectsV2(params).promise();return data.Contents.map(item=>({key:item.Key,size:item.Size,lastModified:item.LastModified}));}catch(err){console.error('List files error:',err);return[];}};// Delete a file from S3\nexport const deleteFile=async function(filename){let bucket=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'your-bucket-name';try{const params={Bucket:bucket,Key:filename};await s3.deleteObject(params).promise();return true;}catch(err){console.error('Delete error:',err);return false;}};// Generate a presigned URL for a file (if applicable)\nexport const getPresignedUrl=async function(filename){let bucket=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'your-bucket-name';try{const params={Bucket:bucket,Key:filename,Expires:60*60// Set expiration time in seconds\n};const url=await s3.getSignedUrl('getObject',params);return url;}catch(err){console.error('Get presigned URL error:',err);return null;}};// ... other imports and code in cloudStorage.js ...\n// Get a list of cameras\nexport const getCameraList=async function(){let bucket=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'your-bucket-name';let folder=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'cameras';try{const cameras=await listFiles(folder,bucket);return cameras.map(item=>({name:item.key.replace(folder+'/','')// Extract camera name from key\n// ... other camera details if needed ...\n}));}catch(err){console.error('Failed to get camera list:',err);return[];}};// Get a list of videos\nexport const getVideoList=async function(){let bucket=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'your-bucket-name';let folder=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'videos';try{const videos=await listFiles(folder,bucket);return videos.map(item=>({name:item.key.replace(folder+'/',''),// Extract video name from key\nsize:item.size,lastModified:item.lastModified// ... other video details if needed ...\n}));}catch(err){console.error('Failed to get video list:',err);return[];}};","map":{"version":3,"names":["AWS","s3","S3","accessKeyId","process","env","AWS_ACCESS_KEY_ID","secretAccessKey","AWS_SECRET_ACCESS_KEY","region","uploadFile","file","filename","bucket","arguments","length","undefined","params","Bucket","Key","Body","ContentType","type","upload","promise","err","console","error","downloadFile","data","getObject","listFiles","prefix","Prefix","listObjectsV2","Contents","map","item","key","size","Size","lastModified","LastModified","deleteFile","deleteObject","getPresignedUrl","Expires","url","getSignedUrl","getCameraList","folder","cameras","name","replace","getVideoList","videos"],"sources":["/workspace/cloud-storage-web-ui/src/utils/cloudStorage.js"],"sourcesContent":["import AWS from 'aws-sdk';\n\nconst s3 = new AWS.S3({\n  accessKeyId: process.env.AWS_ACCESS_KEY_ID, // Securely retrieve credentials\n  secretAccessKey: process.env.AWS_SECRET_ACCESS_KEY,\n  region: 'your-region',\n});\n\n// Upload a file to S3\nexport const uploadFile = async (file, filename, bucket = 'your-bucket-name') => {\n  try {\n    const params = {\n      Bucket: bucket,\n      Key: filename,\n      Body: file,\n      ContentType: file.type,\n    };\n    await s3.upload(params).promise();\n    return true;\n  } catch (err) {\n    console.error('Upload error:', err);\n    return false;\n  }\n};\n\n// Download a file from S3\nexport const downloadFile = async (filename, bucket = 'your-bucket-name') => {\n  try {\n    const params = {\n      Bucket: bucket,\n      Key: filename,\n    };\n    const data = await s3.getObject(params).promise();\n    return data.Body;\n  } catch (err) {\n    console.error('Download error:', err);\n    throw err; // Re-throw for error handling in calling component\n  }\n};\n\n// List files in a bucket or folder\nexport const listFiles = async (prefix = '', bucket = 'your-bucket-name') => {\n  try {\n    const params = {\n      Bucket: bucket,\n      Prefix: prefix,\n    };\n    const data = await s3.listObjectsV2(params).promise();\n    return data.Contents.map((item) => ({\n      key: item.Key,\n      size: item.Size,\n      lastModified: item.LastModified,\n    }));\n  } catch (err) {\n    console.error('List files error:', err);\n    return [];\n  }\n};\n\n// Delete a file from S3\nexport const deleteFile = async (filename, bucket = 'your-bucket-name') => {\n  try {\n    const params = {\n      Bucket: bucket,\n      Key: filename,\n    };\n    await s3.deleteObject(params).promise();\n    return true;\n  } catch (err) {\n    console.error('Delete error:', err);\n    return false;\n  }\n};\n\n// Generate a presigned URL for a file (if applicable)\nexport const getPresignedUrl = async (filename, bucket = 'your-bucket-name') => {\n  try {\n    const params = {\n      Bucket: bucket,\n      Key: filename,\n      Expires: 60 * 60, // Set expiration time in seconds\n    };\n    const url = await s3.getSignedUrl('getObject', params);\n    return url;\n  } catch (err) {\n    console.error('Get presigned URL error:', err);\n    return null;\n  }\n};\n// ... other imports and code in cloudStorage.js ...\n\n// Get a list of cameras\nexport const getCameraList = async (bucket = 'your-bucket-name', folder = 'cameras') => {\n  try {\n    const cameras = await listFiles(folder, bucket);\n    return cameras.map((item) => ({\n      name: item.key.replace(folder + '/', ''), // Extract camera name from key\n      // ... other camera details if needed ...\n    }));\n  } catch (err) {\n    console.error('Failed to get camera list:', err);\n    return [];\n  }\n};\n\n// Get a list of videos\nexport const getVideoList = async (bucket = 'your-bucket-name', folder = 'videos') => {\n  try {\n    const videos = await listFiles(folder, bucket);\n    return videos.map((item) => ({\n      name: item.key.replace(folder + '/', ''), // Extract video name from key\n      size: item.size,\n      lastModified: item.lastModified,\n      // ... other video details if needed ...\n    }));\n  } catch (err) {\n    console.error('Failed to get video list:', err);\n    return [];\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}