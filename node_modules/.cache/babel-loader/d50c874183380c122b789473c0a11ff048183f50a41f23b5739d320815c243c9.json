{"ast":null,"code":"var _jsxFileName = \"/workspace/cloud-storage-web-ui/src/components/CCTVVideoPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ReactPlayer from 'react-player';\nimport { deleteFile, downloadFile, getPresignedUrl, listFiles, uploadFile } from '../utils/cloudStorage';\n// Assuming imported functions\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CCTVVideoPlayer = ({\n  videoId,\n  metadata,\n  onControl\n}) => {\n  _s();\n  const [player, setPlayer] = useState(null);\n  const [playbackState, setPlaybackState] = useState({\n    playing: false,\n    currentTime: 0,\n    volume: 0.5\n  });\n  useEffect(() => {\n    // Fetch video source and metadata\n    async function fetchData() {\n      try {\n        const videoSource = await cloudStorage.getVideoSource(videoId);\n        setPlayer({\n          url: videoSource.url,\n          playing: false,\n          config: {\n            file: videoSource.file,\n            // For cloud storage downloads\n            playing: false,\n            width: '100%',\n            controls: true,\n            // Enable built-in controls\n            playIcon: '▶',\n            pauseIcon: '⏸',\n            volumePanel: {\n              inline: false\n            },\n            // Custom volume control\n            light: false // Disable default UI elements\n          }\n        });\n      } catch (error) {\n        console.error('Error fetching video data:', error);\n        // Handle error gracefully, e.g., display error message\n      }\n    }\n    fetchData();\n  }, [videoId]);\n  const handleControl = action => {\n    switch (action) {\n      case 'play':\n        setPlaybackState({\n          ...playbackState,\n          playing: true\n        });\n        player.play();\n        break;\n      case 'pause':\n        setPlaybackState({\n          ...playbackState,\n          playing: false\n        });\n        player.pause();\n        break;\n      // ... handle other controls\n    }\n    onControl(action); // Pass control events to parent if needed\n  };\n\n  // ... error handling and custom controls implementation ...\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ReactPlayer, {\n      ...player,\n      onPlay: () => handleControl('play'),\n      onPause: () => handleControl('pause'),\n      onEnded: () => handleControl('ended'),\n      onProgress: state => setPlaybackState({\n        ...playbackState,\n        currentTime: state.playedSeconds\n      }),\n      onVolumeChange: volume => setPlaybackState({\n        ...playbackState,\n        volume\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Timestamp: \", metadata.timestamp]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Camera Name: \", metadata.cameraName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Camera Location: \", metadata.cameraLocation]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(CCTVVideoPlayer, \"JuEusSI+ZaicTMLBOcU2iGuGdp0=\");\n_c = CCTVVideoPlayer;\nexport default CCTVVideoPlayer;\nvar _c;\n$RefreshReg$(_c, \"CCTVVideoPlayer\");","map":{"version":3,"names":["React","useState","useEffect","ReactPlayer","deleteFile","downloadFile","getPresignedUrl","listFiles","uploadFile","jsxDEV","_jsxDEV","CCTVVideoPlayer","videoId","metadata","onControl","_s","player","setPlayer","playbackState","setPlaybackState","playing","currentTime","volume","fetchData","videoSource","cloudStorage","getVideoSource","url","config","file","width","controls","playIcon","pauseIcon","volumePanel","inline","light","error","console","handleControl","action","play","pause","children","onPlay","onPause","onEnded","onProgress","state","playedSeconds","onVolumeChange","fileName","_jsxFileName","lineNumber","columnNumber","timestamp","cameraName","cameraLocation","_c","$RefreshReg$"],"sources":["/workspace/cloud-storage-web-ui/src/components/CCTVVideoPlayer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactPlayer from 'react-player';\nimport { deleteFile, downloadFile, getPresignedUrl, listFiles, uploadFile } from '../utils/cloudStorage';\n // Assuming imported functions\n\nconst CCTVVideoPlayer = ({ videoId, metadata, onControl }) => {\n  const [player, setPlayer] = useState(null);\n  const [playbackState, setPlaybackState] = useState({\n    playing: false,\n    currentTime: 0,\n    volume: 0.5,\n  });\n\n  useEffect(() => {\n    // Fetch video source and metadata\n    async function fetchData() {\n      try {\n        const videoSource = await cloudStorage.getVideoSource(videoId);\n        setPlayer({\n          url: videoSource.url,\n          playing: false,\n          config: {\n            file: videoSource.file, // For cloud storage downloads\n            playing: false,\n            width: '100%',\n            controls: true, // Enable built-in controls\n            playIcon: '▶',\n            pauseIcon: '⏸',\n            volumePanel: { inline: false }, // Custom volume control\n            light: false, // Disable default UI elements\n          },\n        });\n      } catch (error) {\n        console.error('Error fetching video data:', error);\n        // Handle error gracefully, e.g., display error message\n      }\n    }\n    fetchData();\n  }, [videoId]);\n\n  const handleControl = (action) => {\n    switch (action) {\n      case 'play':\n        setPlaybackState({ ...playbackState, playing: true });\n        player.play();\n        break;\n      case 'pause':\n        setPlaybackState({ ...playbackState, playing: false });\n        player.pause();\n        break;\n      // ... handle other controls\n    }\n    onControl(action); // Pass control events to parent if needed\n  };\n\n  // ... error handling and custom controls implementation ...\n\n  return (\n    <div>\n      <ReactPlayer\n        {...player}\n        onPlay={() => handleControl('play')}\n        onPause={() => handleControl('pause')}\n        onEnded={() => handleControl('ended')}\n        onProgress={(state) => setPlaybackState({ ...playbackState, currentTime: state.playedSeconds })}\n        onVolumeChange={(volume) => setPlaybackState({ ...playbackState, volume })}\n      />\n      <div>\n        <p>Timestamp: {metadata.timestamp}</p>\n        <p>Camera Name: {metadata.cameraName}</p>\n        <p>Camera Location: {metadata.cameraLocation}</p>\n      </div>\n      {/* Additional controls or metadata display as needed */}\n    </div>\n  );\n};\n\nexport default CCTVVideoPlayer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}