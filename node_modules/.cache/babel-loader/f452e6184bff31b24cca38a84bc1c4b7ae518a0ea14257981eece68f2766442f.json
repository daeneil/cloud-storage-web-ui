{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import ReactPlayer from'react-player';import{Button,Slider,Progress,message}from'antd';// Example UI components\nimport{createClip}from'./clipApi';// Assuming a clip creation API\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const VideoControls=_ref=>{let{videoRef}=_ref;const[playing,setPlaying]=useState(false);const[currentTime,setCurrentTime]=useState(0);const[duration,setDuration]=useState(0);const[playbackRate,setPlaybackRate]=useState(1);// For frame-by-frame navigation\nconst[currentFrame,setCurrentFrame]=useState(0);useEffect(()=>{const player=videoRef.current;if(player){// ... existing event listeners\n// Get initial frame count\nplayer.getDuration().then(duration=>{setCurrentFrame(Math.floor(duration*30));// Assuming 30 FPS\n});}},[videoRef]);const handlePlayPause=()=>{playing?videoRef.current.pause():videoRef.current.play();};const handleSeek=newValue=>{videoRef.current.seekTo(newValue);};const handleVolumeChange=newValue=>{videoRef.current.setVolume(newValue);};const handleSpeedChange=newValue=>{setPlaybackRate(newValue);videoRef.current.setPlaybackRate(newValue);// Adjust playback speed\n};const handleFrameNavigation=direction=>{const step=direction==='forward'?1:-1;const newFrame=Math.max(0,Math.min(currentFrame+step,duration*30));// Ensure within bounds\nconst newTime=newFrame/30;// Convert frame to seconds\nvideoRef.current.seekTo(newTime,'seconds');setCurrentFrame(newFrame);};const handleClipCreation=async()=>{const{startTime,endTime}=player.getCurrentTime();// Get clip start/end times\nconst clipData=await createClip(videoRef.current.currentSrc,startTime,endTime);// Call API\nif(clipData){// Handle successful clip creation\nmessage.success('Clip created successfully!');// ... further actions, e.g., download or preview\n}else{// Handle error\nmessage.error('Failed to create clip.');}};return/*#__PURE__*/_jsxs(\"div\",{className:\"video-controls\",children:[/*#__PURE__*/_jsx(Button,{onClick:handlePlayPause,children:playing?'Pause':'Play'}),/*#__PURE__*/_jsx(Progress,{type:\"slider\",value:currentTime/duration||0,onAfterChange:handleSeek}),/*#__PURE__*/_jsx(Slider,{min:0,max:1,value:videoRef.current.volume,onChange:handleVolumeChange}),/*#__PURE__*/_jsxs(Button.Group,{children:[/*#__PURE__*/_jsx(Button,{onClick:()=>handleFrameNavigation('backward'),children:\"Rewind\"}),/*#__PURE__*/_jsx(Button,{onClick:handleSpeedChange,children:playbackRate===1?'1x':playbackRate}),/*#__PURE__*/_jsx(Button,{onClick:()=>handleFrameNavigation('forward'),children:\"Forward\"})]}),/*#__PURE__*/_jsx(Button,{onClick:handleClipCreation,children:\"Create Clip\"})]});};export default VideoControls;","map":{"version":3,"names":["React","useState","useEffect","useRef","ReactPlayer","Button","Slider","Progress","message","createClip","jsx","_jsx","jsxs","_jsxs","VideoControls","_ref","videoRef","playing","setPlaying","currentTime","setCurrentTime","duration","setDuration","playbackRate","setPlaybackRate","currentFrame","setCurrentFrame","player","current","getDuration","then","Math","floor","handlePlayPause","pause","play","handleSeek","newValue","seekTo","handleVolumeChange","setVolume","handleSpeedChange","handleFrameNavigation","direction","step","newFrame","max","min","newTime","handleClipCreation","startTime","endTime","getCurrentTime","clipData","currentSrc","success","error","className","children","onClick","type","value","onAfterChange","volume","onChange","Group"],"sources":["/workspace/cloud-storage-web-ui/src/components/VideoControls.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport ReactPlayer from 'react-player';\nimport { Button, Slider, Progress, message } from 'antd'; // Example UI components\nimport { createClip } from './clipApi'; // Assuming a clip creation API\n\nconst VideoControls = ({ videoRef }) => {\n  const [playing, setPlaying] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [playbackRate, setPlaybackRate] = useState(1);\n\n  // For frame-by-frame navigation\n  const [currentFrame, setCurrentFrame] = useState(0);\n\n  useEffect(() => {\n    const player = videoRef.current;\n    if (player) {\n      // ... existing event listeners\n\n      // Get initial frame count\n      player.getDuration().then((duration) => {\n        setCurrentFrame(Math.floor(duration * 30)); // Assuming 30 FPS\n      });\n    }\n  }, [videoRef]);\n\n  const handlePlayPause = () => {\n    playing ? videoRef.current.pause() : videoRef.current.play();\n  };\n\n  const handleSeek = (newValue) => {\n    videoRef.current.seekTo(newValue);\n  };\n\n  const handleVolumeChange = (newValue) => {\n    videoRef.current.setVolume(newValue);\n  };\n\n  const handleSpeedChange = (newValue) => {\n    setPlaybackRate(newValue);\n    videoRef.current.setPlaybackRate(newValue); // Adjust playback speed\n  };\n\n  const handleFrameNavigation = (direction) => {\n    const step = direction === 'forward' ? 1 : -1;\n    const newFrame = Math.max(0, Math.min(currentFrame + step, duration * 30)); // Ensure within bounds\n    const newTime = newFrame / 30; // Convert frame to seconds\n    videoRef.current.seekTo(newTime, 'seconds');\n    setCurrentFrame(newFrame);\n  };\n\n  const handleClipCreation = async () => {\n    const { startTime, endTime } = player.getCurrentTime(); // Get clip start/end times\n    const clipData = await createClip(videoRef.current.currentSrc, startTime, endTime); // Call API\n\n    if (clipData) {\n      // Handle successful clip creation\n      message.success('Clip created successfully!');\n      // ... further actions, e.g., download or preview\n    } else {\n      // Handle error\n      message.error('Failed to create clip.');\n    }\n  };\n\n  return (\n    <div className=\"video-controls\">\n      <Button onClick={handlePlayPause}>\n        {playing ? 'Pause' : 'Play'}\n      </Button>\n      <Progress\n        type=\"slider\"\n        value={currentTime / duration || 0}\n        onAfterChange={handleSeek}\n      />\n      <Slider min={0} max={1} value={videoRef.current.volume} onChange={handleVolumeChange} />\n      <Button.Group>\n        <Button onClick={() => handleFrameNavigation('backward')}>\n          Rewind\n        </Button>\n        <Button onClick={handleSpeedChange}>\n          {playbackRate === 1 ? '1x' : playbackRate}\n        </Button>\n        <Button onClick={() => handleFrameNavigation('forward')}>\n          Forward\n        </Button>\n      </Button.Group>\n      <Button onClick={handleClipCreation}>Create Clip</Button>\n    </div>\n  );\n};\n\nexport default VideoControls;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}