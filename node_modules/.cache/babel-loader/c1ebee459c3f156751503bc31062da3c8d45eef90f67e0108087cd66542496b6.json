{"ast":null,"code":"var _jsxFileName = \"/workspace/cloud-storage-web-ui/src/components/VideoDownload.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button, Progress } from 'antd'; // Example UI components\nimport { cloudStorage } from '../utils/cloudStorage'; // Assuming imported functions\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoDownload = ({\n  videoId\n}) => {\n  _s();\n  const [downloading, setDownloading] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState(null);\n  const handleDownload = async () => {\n    setDownloading(true);\n    setError(null);\n    try {\n      const videoUrl = await cloudStorage.getVideoDownloadUrl(videoId);\n      const blob = await fetch(videoUrl).then(res => res.blob());\n      const filename = generateFilename(videoId, blob.type);\n      const link = document.createElement('a');\n      link.href = URL.createObjectURL(blob);\n      link.download = filename;\n      link.click();\n      const reader = new FileReader();\n      reader.readAsDataURL(blob);\n      reader.onloadend = () => {\n        // Calculate progress based on loaded data\n        const loadedBytes = reader.result.length;\n        const totalBytes = blob.size;\n        setProgress(Math.round(loadedBytes / totalBytes * 100));\n      };\n    } catch (err) {\n      setError(err);\n    } finally {\n      setDownloading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [downloading && /*#__PURE__*/_jsxDEV(Progress, {\n      percent: progress,\n      status: \"active\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 23\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleDownload,\n      disabled: downloading,\n      children: downloading ? 'Downloading...' : 'Download Video'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoDownload, \"C6ROxswZFSPlB8W4U7kYJgxEcDk=\");\n_c = VideoDownload;\nexport default VideoDownload;\nvar _c;\n$RefreshReg$(_c, \"VideoDownload\");","map":{"version":3,"names":["React","useState","useEffect","Button","Progress","cloudStorage","jsxDEV","_jsxDEV","VideoDownload","videoId","_s","downloading","setDownloading","progress","setProgress","error","setError","handleDownload","videoUrl","getVideoDownloadUrl","blob","fetch","then","res","filename","generateFilename","type","link","document","createElement","href","URL","createObjectURL","download","click","reader","FileReader","readAsDataURL","onloadend","loadedBytes","result","length","totalBytes","size","Math","round","err","children","percent","status","fileName","_jsxFileName","lineNumber","columnNumber","className","message","onClick","disabled","_c","$RefreshReg$"],"sources":["/workspace/cloud-storage-web-ui/src/components/VideoDownload.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, Progress } from 'antd'; // Example UI components\nimport { cloudStorage } from '../utils/cloudStorage'; // Assuming imported functions\n\nconst VideoDownload = ({ videoId }) => {\n  const [downloading, setDownloading] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState(null);\n\n  const handleDownload = async () => {\n    setDownloading(true);\n    setError(null);\n\n    try {\n      const videoUrl = await cloudStorage.getVideoDownloadUrl(videoId);\n      const blob = await fetch(videoUrl).then((res) => res.blob());\n      const filename = generateFilename(videoId, blob.type);\n\n      const link = document.createElement('a');\n      link.href = URL.createObjectURL(blob);\n      link.download = filename;\n      link.click();\n\n      const reader = new FileReader();\n      reader.readAsDataURL(blob);\n      reader.onloadend = () => {\n        // Calculate progress based on loaded data\n        const loadedBytes = reader.result.length;\n        const totalBytes = blob.size;\n        setProgress(Math.round((loadedBytes / totalBytes) * 100));\n      };\n    } catch (err) {\n      setError(err);\n    } finally {\n      setDownloading(false);\n    }\n  };\n\n  return (\n    <div>\n      {downloading && <Progress percent={progress} status=\"active\" />}\n      {error && <p className=\"error\">{error.message}</p>}\n      <Button onClick={handleDownload} disabled={downloading}>\n        {downloading ? 'Downloading...' : 'Download Video'}\n      </Button>\n    </div>\n  );\n};\n\nexport default VideoDownload;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}